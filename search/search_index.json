{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Interactive data exploration for psychophysics.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Try out the dashboard<ul> <li>Simulate data by adjusting model/simulation parameters</li> <li>Upload your own dataset according to the specified schema.</li> <li>Examine existing datasets using the dropdown menu</li> </ul> </li> <li>Use psychoanalyze as a Python package to develop your own analysis scripts.</li> </ul>"},{"location":"#installation","title":"Installation","text":"PoetryPip <pre><code>poetry add psychoanalyze\n</code></pre> <pre><code>pip install psychoanalyze\n</code></pre>"},{"location":"#why-psychoanalyze","title":"Why PsychoAnalyze?","text":"<p>PsychoAnalyze provides researchers with:</p> <ul> <li><code>psychoanalyze</code>, a Python package to assist with common data transformations and visualizations in psychophysics.</li> <li>psychoanalyze.io, a no-code dashboard for psychophysics data analysis and exploration.</li> </ul>"},{"location":"api/","title":"API Reference","text":"<p>Project architecture of <code>psychoanalyze</code>.</p> <p>Most submodules of <code>psychoanalyze</code> are organized according to the granularity of various levels in the hierarchy of the data. These submodules are as follows:</p> <ul> <li> <p>Blocks are perhaps the most analytically significant objects in the hierarchy. They represent a specific set of experimental conditions and generally correspond to a single fit of the psychometric function.</p> </li> <li> <p>Points correspond to the aggregate measures of method-of-constant-stimuli experiments at each stimulus level measured. For example, a block that samples 8 stimulus intensity levels would have 8 corresponding points.</p> </li> <li> <p>Sessions represent a single day of experiments performed by a subject. It may contain several blocks.</p> </li> <li> <p>Subjects and trials are self-explanatory</p> </li> <li> <p>The data module performs general-purpose data transformation and analysis functions that do not fit easily into one of the above labels.</p> </li> </ul> <p><code>psychoanalyze</code> also contains other submodules relating to specific lines of psychophysical analysis.</p> <ul> <li> <p>strength_duration contains functions assessing the relationship between the amplitude and the time course of the stimulus.</p> </li> <li> <p>weber contains functions assessing how discriminability of two stimuli relates to the baseline intensities of the stimuli according to Weber's Law.</p> </li> <li> <p>gescheider contains various examples of plots and measures included in George Gescheider's textbook, Psychophysics: The Fundamentals.</p> </li> <li> <p>schemas contains data table schemas of the hierarchical entities described above.</p> </li> <li> <p>plot contains functions assisting with the plotting of all of the above modules.</p> </li> </ul>"},{"location":"dashboard/","title":"Dashboard","text":"<p>The PsychoAnalyze dashboard is powered by Plotly/Dash.</p> <ul> <li> <p><code>app.py</code> is the main file which contains the infrastructure for the Dash app. and callback functions in their entirety.</p> </li> <li> <p><code>layout.py</code> specifies the layout of the HTML and Dash components that comprise the app.</p> </li> <li> <p><code>components.py</code> contains more complex and/or reusable components used in the app.</p> </li> </ul>"},{"location":"tests/","title":"Tests","text":"<p>Automated tests for <code>psychoanalyze</code>.</p> <p>Tests are documented for both users of and contributors to the package.</p> <ul> <li>Users should reference tests as examples for efficient utilization of the <code>psychoanalyze</code> package.</li> <li>Contributors should reference tests to assist in writing the required tests for accepted contributions.</li> </ul> <p>Generally, each test file corresponds to its corresponding submodule.</p>"},{"location":"tooling/","title":"Tooling","text":"<p>Psychoanalyze uses</p> <ul> <li>Python 3.11</li> <li>Poetry for package and virtual environment management</li> <li>Pytest for automated testing</li> <li>MkDocs for documentation static site generation</li> <li>Heroku for dashboard deployment</li> </ul> <p>Dev Containers are the suggested way to set up a development environment. Running a dev container locally requires Docker Desktop on OSX and Windows.</p>"}]}