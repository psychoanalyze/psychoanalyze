
## Chapter 4

### Figure 3
```{python}

import pandas as pd
import plotly.express as px
import numpy as np
from scipy.stats import norm

df = pd.DataFrame(
    {
        "Stimulus Intensity": [2,3,4,5,6],
        "p(yes)": [0.01, 0.2, .5, .85, .98]
    }
)

x = np.linspace(4-3, 4+3)
df2 = pd.DataFrame(
    {
        "Stimulus Intensity of momentary threshold": x,
        "Ordinate of normal curve": norm.pdf(x, loc=4),
    }
)

px.scatter(df, x="Stimulus Intensity", y="p(yes)").show()
px.line(df2, x="Stimulus Intensity of momentary threshold", y="Ordinate of normal curve").show()

```


### Figure 15

```{python}

table_4_1 = pd.DataFrame({
    "p(S)": [.90, .90, .70, .70, .50, .50, .30, .30, .10, .10],
    "Number of stimulus trials": [180, 180, 140, 140, 100, 100, 60, 60, 20, 20],
    "Number of no stimulus trials": [20, 20, 60, 60, 100, 100, 140, 140, 180, 180],
    "Trial Type": ["Stimulus", "No Stimulus"] * 5,
    "Yes": [.99, .95, .91, .64, .69, .31, .36, .09, .05, .01],
    "No": [.01, .05, .09, .36, .31, .69, .64, .91, .95, .99]
})

roc_points = pd.DataFrame(
    {
        "False Alarm Rate [p(yes|no stimulus)]": [.95, .64, .31, .09, .01],
        "Hit Rate [p(yes|stimulus)]": [.99, .91, .69, .36, .05],
    }
)

px.line(roc_points, x="False Alarm Rate [p(yes|no stimulus)]", y="Hit Rate [p(yes|stimulus)]")

```

### Exercise 1

```{python}

#| layout-ncol: 2
#| column: page

from scipy.stats import skewnorm

x = np.linspace(-4, 4)
y = skewnorm.pdf(x, -4)
px.scatter(x=x, y=y).show()
psi = skewnorm.cdf(x, -4)
px.scatter(x=x, y=psi).show()

```

### Exercise 2

```{python}

df = pd.DataFrame(
    {
        "Number of Emitted Quanta": [0, 1, 2, 3, 4, 5, 6, 7],
        "Probability": [.13, .26, .26, .17, .09, .03, .015, .008]
    }
)

p_stimulus_detected = .31

```

### Exercise 3

```{python}

x1 = np.linspace(-4, 4)
x2 = np.linspace(0, 8)
y1 = norm.cdf(x1)
y2 = norm.cdf(x2, 4, .5)

df = pd.concat(
    [
        pd.DataFrame({
            "x": x1,
            "y": y1,
        }),
        pd.DataFrame(
            {
                "x": x2,
                "y": y2
            }
        )
    ],
    keys=[1,2]
)
px.scatter(df, x='x',y='y')

```

### Exercise 4

```{python}

p_star_hits = [.20, .50]
p_fas = [.00, .20, .40, .60, .80, 1.00]

p_hits = [[p_star_hit + p_fa * (1-p_star_hit) for p_star_hit in p_star_hits] for p_fa in p_fas]

df = pd.DataFrame(p_hits, columns=["p*(hits)=.20", "p*(hits)=.30"], index=pd.Index(p_fas, name="p(false alarms)"))

px.line(df.reset_index(), x="p(false alarms)", y=["p*(hits)=.20", "p*(hits)=.30"])

```
